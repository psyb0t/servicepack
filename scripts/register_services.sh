#!/bin/bash

set -e

echo "Regenerating service registration file..."
REGISTRATION_FILE="internal/pkg/services/services.gen.go"
SERVICE_IF_FILE="internal/pkg/services/service_manager.go"
SERVICE_IF_NAME="Service"
SERVICES_DIR="internal/pkg/services"

# Use gofindimpl to discover all service implementations
SERVICES_JSON=$(go tool gofindimpl \
    -interface ${SERVICE_IF_FILE}:${SERVICE_IF_NAME} \
    -dir ${SERVICES_DIR})

# Start generating the registration file
cat > "$REGISTRATION_FILE" << EOF
// Code generated by register_services.sh; DO NOT EDIT.

package services

EOF

# Parse JSON and add imports, init function, and service registrations
{
    echo "$SERVICES_JSON" | jq -r '.[] | "import " + .package + " \"" + .packagePath + "\""'
    echo "import \"github.com/sirupsen/logrus\""
    echo ""
    echo "func init() { //nolint:gochecknoinits"
    echo "	sm := GetServiceManagerInstance()"
    echo ""
    echo "	var service Service"
    echo "	var err error"
    echo ""
    echo "$SERVICES_JSON" | jq -r '.[] | "\tservice, err = " + .package + ".New()\n\tif err != nil {\n\t\tlogrus.Fatalf(\"failed to create " + .package + " service: %v\", err)\n\t}\n\tsm.Add(service)\n"'
    echo "}"
} >> "$REGISTRATION_FILE"

# Format the generated file and organize imports
go tool goimports -w "$REGISTRATION_FILE"

echo "Service registration file regenerated at $REGISTRATION_FILE"